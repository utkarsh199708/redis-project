{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red50\green94\blue238;\red42\green44\blue51;
\red167\green87\blue5;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c25098\c47059\c94902;\cssrgb\c21961\c22745\c25882;
\cssrgb\c71765\c41961\c392;}
\paperw11900\paperh16840\margl1440\margr1440\vieww30040\viewh18340\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import redis\
\
# Connect to source-db (write)\
source_client = redis.Redis(\
    host="source-db",  # replace with actual hostname or IP\
    port=6379,\
    decode_responses=True\
)\
\
# Connect to replica-db (read)\
replica_client = redis.Redis(\
    host="replica-db",  # replace with actual hostname or IP\
    port=6379,\
    decode_responses=True\
)\
\
# Insert values 1\'96100 into source-db\
for i in range(1, 101):\
    source_client.lpush("numbers", i)  # LPUSH will insert at the head of the list\
\
print("Inserted values 1\'96100 into source-db")\
\
# Read values from replica-db\
values = replica_client.lrange("numbers", 0, -1)\
\
# Print them in reverse order\
print("Values from replica-db in reverse order:")\
for v in reversed(values):\
    print(v)\
\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 memtier_benchmark -s \cf3 \strokec3 localhost\cf0 \strokec2  -p \cf3 \strokec3 9000\cf0 \strokec2  -a \cf3 \strokec3 123 \cf0 \strokec2  \cf4 \strokec4 \\\cf0 \strokec2  --ratio\cf3 \strokec3 =\cf5 \strokec5 1\cf0 \strokec2 :0 \cf4 \strokec4 \\\cf0 \strokec2  --pipeline\cf3 \strokec3 =\cf5 \strokec5 20\cf0 \strokec2  \cf4 \strokec4 \\\cf0 \strokec2  --clients\cf3 \strokec3 =\cf5 \strokec5 10\cf0 \strokec2  \cf4 \strokec4 \\\cf0 \strokec2  --threads\cf3 \strokec3 =\cf5 \strokec5 4\cf0 \strokec2  \cf4 \strokec4 \\\cf0 \strokec2  --requests\cf3 \strokec3 =\cf5 \strokec5 10000\cf0 \strokec2  \cf4 \strokec4 \\\cf0 \strokec2  --key-pattern\cf3 \strokec3 =\cf0 \strokec2 R:R \cf4 \strokec4 \\\cf0 \strokec2  --data-size\cf3 \strokec3 =\cf5 \strokec5 1024\cf0 \strokec2  \cf4 \strokec4 \\\cf0 \strokec2  --run-count\cf3 \strokec3 =\cf5 \strokec5 1\cf0 \strokec2  \cf4 \strokec4 \\\cf0 \strokec2  --hide-histogram\
\
\
\
memtier_benchmark -s localhost -p 12000 \\\
  --ratio=1:0 \\\
  --pipeline=20 \\\
  --clients=10 \\\
  --threads=4 \\\
  --requests=10000 \\\
  --key-pattern=R:R \\\
  --data-size=1024 \\\
  --run-count=1 \\\
  --hide-histogram}